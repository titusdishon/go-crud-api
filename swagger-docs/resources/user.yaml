UsersGetPath:
  get:
    tags:
      - User
    summary: Get all available Users
    security:
      - BearerAuth: []
    responses:
      200:
        description: User was created.
        content:
          application/json: { }

UserCreatePath:
  post:
    tags:
      - User
    summary: Create New User
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../schemas/user_schema.yaml'
            example:
              name: User1
              email: user1@gmail.com
              summary: 'some description'
    responses:
      200:
        description: User was created.
        content:
          application/json: { }

UserUpdatePathWithID:
  put:
    tags:
      - User
    summary: Update user details
    security:
      - BearerAuth: [ ]
    requestBody:
      content:
        application/json:
          schema:
            $ref: '../schemas/user_schema.yaml'
            example:
              name: User1
              email: user1@gmail.com
              summary: 'some description'

    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: "1"
    responses:
      200:
        description: User was updated.
        content:
          application/json: { }

UserGetPathWithID:
  get:
    tags:
      - User
    summary: Get User by ID
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: "1"
    responses:
      200:
        description: User fetched.
        content:
          application/json: { }
        
UserDeletePathWithID:
  delete:
    tags:
      - User
    summary: Delete user
    security:
      - BearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          example: "1"
    responses:
      200:
        description: User was deleted.
        content:
          application/json: { }
